Nội dung Lập trình hướng đối tượng (OOP) là gì? OOP được dùng để làm gì? Đối tượng (Object) và Lớp (Class) trong OOP là gì? Ưu điểm của lập trình hướng đối tượng OOP 4 đặc tính cơ bản của OOP Những ngôn ngữ OOP phổ biến nhất Java C++ PHP JavaScript Python OOP (viết tắt của Object Oriented Programming) – lập trình hướng đối tượng là một phương pháp lập trình dựa trên khái niệm về lớp và đối tượng. OOP tập trung vào các đối tượng thao tác hơn là logic để thao tác chúng, giúp code dễ quản lý, tái sử dụng được và dễ bảo trì. Bất kỳ developer nào muốn đi trên con đường lập trình cũng đều phải biết về OOP. Đọc bài viết này để biết: OOP là gì? Đối tượng và lớp trong OOP là gì? Các đặc tính cơ bản của OOP là gì? Các ngôn ngữ OOP phổ biến và tài liệu tham khảo Tham khảo việc làm OOP Developer trên ITviec. Lập trình hướng đối tượng (OOP) là gì? OOP được dùng để làm gì? OOP (viết tắt của Object Oriented Programming) – lập trình hướng đối tượng là một phương pháp lập trình dựa trên khái niệm về lớp và đối tượng. OOP tập trung vào các đối tượng thao tác hơn là logic để thao tác chúng. OOP là nền tảng của các design pattern hiện nay. Đọc thêm: Design pattern là gì? Vì sao nên học design pattern? Mục tiêu của OOP là tối ưu việc quản lý source code, giúp tăng khả năng tái sử dụng và quan trọng hơn hết là giúp tóm gọn các thủ tục đã biết trước tính chất thông qua việc sử dụng các đối tượng. Đối tượng (Object) và Lớp (Class) trong OOP là gì? Đối tượng (Object) Đối tượng trong OOP bao gồm 2 thành phần chính: Thuộc tính (Attribute): là những thông tin, đặc điểm của đối tượng Phương thức (Method): là những hành vi mà đối tượng có thể thực hiện Để dễ hình dung, ta có một ví dụ thực tế về đối tượng là smartphone. Đối tượng này sẽ có: Thuộc tính: màu sắc, bộ nhớ, hệ điều hành… Phương thức: gọi điện, chụp ảnh, nhắn tin, ghi âm… Lớp (Class) Lớp là sự trừu tượng hóa của đối tượng. Những đối tượng có những đặc tính tương tự nhau sẽ được tập hợp thành một lớp. Lớp cũng sẽ bao gồm 2 thông tin là thuộc tính và phương thức. Một đối tượng sẽ được xem là một thực thể của lớp. Tiếp nối ví dụ ở phần đối tượng (object) phía trên, ta có lớp (class) smartphone gồm 2 thành phần: Thuộc tính: màu sắc, bộ nhớ, hệ điều hành… Phương thức: gọi điện, chụp ảnh, nhắn tin, ghi âm… Các đối tượng của lớp này có thể là: iPhone, Samsung, Oppo, Huawei… Ưu điểm của lập trình hướng đối tượng OOP OOP mô hình hóa những thứ phức tạp dưới dạng cấu trúc đơn giản. Code OOP có thể sử dụng lại, giúp tiết kiệm tài nguyên. Giúp sửa lỗi dễ dàng hơn. So với việc tìm lỗi ở nhiều vị trí trong code thì tìm lỗi trong các lớp (được cấu trúc từ trước) đơn giản và ít mất thời gian hơn. Có tính bảo mật cao, bảo vệ thông tin thông qua đóng gói. Dễ mở rộng dự án. 4 đặc tính cơ bản của OOP Tính đóng gói (Encapsulation) Tính đóng gói cho phép che giấu thông tin và những tính chất xử lý bên trong của đối tượng. Các đối tượng khác không thể tác động trực tiếp đến dữ liệu bên trong và làm thay đổi trạng thái của đối tượng mà bắt buộc phải thông qua các phương thức công khai do đối tượng đó cung cấp. Tính chất này giúp tăng tính bảo mật cho đối tượng và tránh tình trạng dữ liệu bị hư hỏng ngoài ý muốn. Tính kế thừa (Inheritance) Đây là tính chất được sử dụng khá nhiều. Tính kế thừa cho phép xây dựng một lớp mới (lớp Con), kế thừa và tái sử dụng các thuộc tính, phương thức dựa trên lớp cũ (lớp Cha) đã có trước đó.  Các lớp Con kế thừa toàn bộ thành phần của lớp Cha và không cần phải định nghĩa lại. Lớp Con có thể mở rộng các thành phần kế thừa hoặc bổ sung những thành phần mới. Ví dụ:  Lớp Cha là smartphone, có các thuộc tính: màu sắc, bộ nhớ, hệ điều hành… Các lớp Con là iPhone, Samsung, Oppo cũng có các thuộc tính: màu sắc, bộ nhớ, hệ điều hành… Tính đa hình (Polymorphism) Tính đa hình trong lập trình OOP cho phép các đối tượng khác nhau thực thi chức năng giống nhau theo những cách khác nhau. Ví dụ:  Ở lớp smartphone, mỗi một dòng máy đều kế thừa các thành phần của lớp cha nhưng iPhone chạy trên hệ điều hành iOS, còn Samsung lại chạy trên hệ điều hành Android. Chó và mèo cùng nghe mệnh lệnh “kêu đi” từ người chủ. Chó sẽ “gâu gâu” còn mèo lại kêu “meo meo”. Tính trừu tượng (Abstraction) Tính trừu tượng giúp loại bỏ những thứ phức tạp, không cần thiết của đối tượng và chỉ tập trung vào những gì cốt lõi, quan trọng. Ví dụ: Quản lý nhân viên thì chỉ cần quan tâm đến những thông tin như: Họ tên Ngày sinh Giới tính … Chứ không cần phải quản lý thêm thông tin về: Chiều cao Cân nặng Sở thích Màu da … Những ngôn ngữ OOP phổ biến nhất Java Java là ngôn ngữ lập trình hướng đối tượng (OOP), đa mục đích và độc lập nền tảng. Thay vì biên dịch mã nguồn thành mã máy trên nền tảng cụ thể, code Java được biên dịch thành bytecode – một định dạng trung gian. Bytecode sau đó sẽ được chạy bởi môi trường thực thi (runtime environment). Code Java “viết một lần, chạy mọi nơi” nên khá lý tưởng cho những người mới tìm hiểu. Tham khảo: 12 tài liệu học lập trình Java chọn lọc C++ Là một ngôn ngữ lập trình hướng đối tượng được phát triển bởi Bjarne Stroustrup nhưng C++ mang cả 2 phong cách: lập trình hướng cấu trúc giống C và có thêm phong cách hướng đối tượng. Nếu đã quen với lập trình hướng cấu trúc trước đó thì việc học C++ không phải là điều quá khó khăn. Tham khảo: Tài liệu học C++ hoàn toàn miễn phí PHP PHP là ngôn ngữ lập trình đa mục đích, được rất nhiều Developer sử dụng. Đây là ngôn ngữ kịch bản mã nguồn mở, chạy ở phía server và được dùng để tạo ra các ứng dụng web. Tham khảo: 10+ sách lập trình PHP hay nhất mọi cấp độ JavaScript JavaScript là ngôn ngữ lập trình được sử dụng trong việc xây dựng các website có tính tương tác cao, với mức độ phổ biến được xếp hạng bậc nhất. Học JavaScript khá dễ dàng và đặc biệt phù hợp cho những developer mới bắt đầu học lập trình. Tham khảo: 20+ tài liệu học JavaScript hay nhất hiện nay Python Python là ngôn ngữ lập trình hướng đối tượng bậc cao, dùng để phát triển website và nhiều ứng dụng khác nhau. Python được tạo ra bởi Guido van Rossum và được phát triển trong một dự án mã mở (open source). Với cú pháp cực kì đơn giản và thanh lịch, Python là lựa chọn hoàn hảo cho những ai lần đầu tiên học lập trình.  Tham khảo: 20 tài liệu lập trình Python từ cơ bản đến nâng cao Bạn thấy bài viết hay và cần thiết với nhiều người? Đừng ngại nhấn nút Share bên dưới nhé. Và đừng quên tham khảo việc làm OOP Developer trên ITviec. Related posts: Top các tech blogger nổi tiếng thế giới bạn cần biết (updated 2020) GitHub là gì? Ba lợi ích sự nghiệp to lớn GitHub mang đến cho Developer! Top 10 ngôn ngữ lập trình nên học trong năm 2020 30+ tài liệu lập trình game “chất” nhất Chia sẻ bài viết:
