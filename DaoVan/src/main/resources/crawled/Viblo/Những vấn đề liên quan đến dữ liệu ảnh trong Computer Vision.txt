httpsvibloasiapnhung-van-de-lien-quan-den-du-lieu-anh-trong-computer-vision-QwdzKWbPham Thi Hong Anh Honganh Follow K Published about hours ago min read Những vấn_đề liên_quan đến dữ_liệu ảnh trong Computer Vision Report Như mọi_người cũng biết data cực_kỳ quan_trọng đối_với Machine learning vì_vậy hôm_nay mình sẽ chia_sẻ xung_quanh vấn_đề_ảnh
Bài_viết bao_gồm các phần Lưu_trữ Image Các tool annotate data Lưu_trữ image Khi chúng_ta nói về deep learning thường thì điều đầu_tiên xuất_hiện là một lượng dữ_liệu khổng_lồ hoặc một số_lượng lớn hình ảnhViệc lưu_trữ cực kì đơn_giản trong_khi tập data của chúng_ta chỉ có vài chục cho_đến vài nghìn_ảnh
Tuy_nhiên khi lượng ảnh của bạn càng lớn thì việc lưu_trữ trên máy_tính sẽ làm tốn diện_tích bộ_nhớ
ImageNet là một cơ_sở_dữ_liệu hình_ảnh nổi_tiếng được tập_hợp để training các mô_hình về các nhiệm_vụ như classification detection và segmentation và nó bao_gồm hơn triệu hình_ảnh
Sau_đây mình sẽ chia_sẻ cho các bạn cách lưu_trữ hình_ảnh
Hình Lưu_trữ hình_ảnh Lưu ở file png trên disk Với việc lưu_trữ ở trên disk này bạn nên cài_đặt pillow để đơn_giản và hiệu_quả hơn pip install pillow Cách_lưu_trữ from PIL import Imageimport csvdef store single diskimage image id label Imagefromarrayimagesavedisk dir fimage idpng with opendisk dir fimage idcsv wt as csvfile writer csvwriter csvfile delimiter quotechar quotingcsvQUOTE MINIMAL writerwriterow[label] khi xử_lý data được lưu ở trong disk chúng_ta nên lưu_trữ một file label riêng ra một file csv để tránh hiện_tượng phải mở hết tất_cả các file mỗi_lần chỉ cần đọ vài bức_ảnh thôi
Lưu_trong lightning memory-mapped databases LMDB LMDB là một hệ_thống lưu_trữ giá_trị khóa trong_đó mỗi mục được lưu_trữ dưới dạng mảng byte
Khóa sẽ là một định danh duy_nhất cho mỗi hình_ảnh và giá_trị sẽ là chính hình_ảnh_đó
LMDB được ánh_xạ bộ_nhớ Điều này có_nghĩa là nó trả về con trỏ trực_tiếp đến địa_chỉ bộ_nhớ của cả khóa và giá_trị mà_không cần sao_chép bất_cứ thứ gì trong bộ_nhớ như hầu_hết các cơ_sở_dữ_liệu khác
Cùng_cài đặt LMDB và thử thôi nào pip install lmdb Ở đây chúng_ta sẽ thử với tập CIFAR nhé class CIFAR Image def init  self image label Dimensions of image for reconstruction - not really necessary for this dataset but some datasets may include images of varying sizes selfchannels imageshape[] selfsize imageshape[] selfimage imagetobytes selflabel label def get imageself Returns the image as a numpy array image npfrombufferselfimage dtypenpuint return imagereshapeselfsize selfchannels Lưu_trữ import lmdbimport pickledef store single lmdbimage image id label map size imagenbytes Create a new LMDB environment env lmdbopenstrlmdb dir fsingle lmdb map sizemap size Start a new write transaction with envbeginwriteTrue as txn All key-value pairs need to be strings value CIFAR Imageimage label key fimage id txnputkeyencodeascii pickledumpsvalue envclose Lưu_dưới dạng HDF Với HDF bạn có_thể lưu_trữ nhiều hơn tập dữ_liệu bạn có_thể chia nhỏ data rồi lưu_trữ
Cài đặt với pip trước nào pip install hpy Tạo file hdf import numpy as npimport hpydata order 'tf' 'tf' for Tensorflow check the order of data and chose proper data shape to save imagetrain shape lentrain addrs val shape lenval addrs test shape lentest addrs open a hdf file and create earrayshdf file hpyFilehdf path mode'w'hdf filecreate datasettrain img train shape npinthdf filecreate datasetval img val shape npinthdf filecreate datasettest img test shape npinthdf filecreate datasettrain mean train shape[] npfloathdf filecreate datasettrain labels lentrain addrs npinthdf file[train labels][] train labelshdf filecreate datasetval labels lenval addrs npinthdf file[val labels][] val labelshdf filecreate datasettest labels lentest addrs npinthdf file[test labels][] test label Cách load và lưu mean npzerostrain shape[] npfloat loop over train addressesfor i in rangelentrain addrs print how many images are saved every images if i and i print 'Train data 'formati lentrain addrs read an image and resize to cv load images as BGR convert it to RGB addr train addrs[i] img cvimreadaddr img cvresizeimg interpolationcvINTER CUBIC img cvcvtColorimg cvCOLOR BGRRGB add any image pre-processing here if the data order is Theano axis orders should change if data order 'th' img nprollaxisimg save the image and calculate the mean so far hdf file[train img][i ] img[None] mean + img floatlentrain labels loop over validation addressesfor i in rangelenval addrs print how many images are saved every images if i and i print 'Validation data 'formati lenval addrs read an image and resize to cv load images as BGR convert it to RGB addr val addrs[i] img cvimreadaddr img cvresizeimg interpolationcvINTER CUBIC img cvcvtColorimg cvCOLOR BGRRGB add any image pre-processing here if the data order is Theano axis orders should change if data order 'th' img nprollaxisimg save the image hdf file[val img][i ] img[None] loop over test addressesfor i in rangelentest addrs print how many images are saved every images if i and i print 'Test data 'formati lentest addrs read an image and resize to cv load images as BGR convert it to RGB addr test addrs[i] img cvimreadaddr img cvresizeimg interpolationcvINTER CUBIC img cvcvtColorimg cvCOLOR BGRRGB add any image pre-processing here if the data order is Theano axis orders should change if data order 'th' img nprollaxisimg save the image hdf file[test img][i ] img[None] save the mean and close the hdf filehdf file[train mean][] meanhdf fileclose Trên đây mình đã nêu ra cách lưu trữ data tiếp theo sẽ tiếp tục đến phần mới
Các Tool annotated data Trong bài_toán_Học máy phần xử_lý và phân_tích dữ_liệu là cực_kỳ quan_trọng vì_vậy mình sẽ giới_thiệu cho mọi_người một_số tool annotated data giúp cho công_việc làm_dữ_liệu trở_nên đơn_giản hơn
PixelAnnotationTool Với tool này phù_hợp với các bài_toán segmentation như tìm xe_ô_tô đường các tế_bào trong y_học để hỗ_trợ chẩn_đoán
Hình Hai hình_ảnh này là những ví_dụ về hình_ảnh segment internet Tool này được sử_dụng thuật_toán watershed marked của OpenCV
Mọi_người có_thể vào link binary để tải tool về và dùng
Hình Giao_diện của Tool Cách dùng bạn có_thể đổi màu_sắc ở file config trong source code và sau_đó để số_lượng màu tương_ứng với các vùng bạn muốn segmentation khác_nhau
Sau_đó bạn chỉ cần_dùng chuột chấm màu và nhấn phím enter theo từng vùng màu của bạn mong_muốn
Tool sinh dữ_liệu Text Recognition Data Generator là một tool dùng để sinh_ra text
Với tool này bạn có_thể sinh_ra các kiểu_chữ và màu_sắc khác_nhau để phục_vụ cho bài_toán text detection của mình
Bạn chỉ cần lưu các file cntxt ở trong dicts và font chữ cũng lưu ở thư_mục cn luôn và chạy code theo dòng code như_sau python runpy -l cn -c -w -t -k -rk -b -bl -rbl để tự_sinh data đúng theo yêu_cầu bài_toán bạn nên tìm_hiểu kỹ ở documentation Tool LabelImg LabelImg cũng là một tool dùng để annotated dữ liệu nhưng khác hơn Pixeltool ở chỗ LabelImg dùng để lấy_ra góc xung_quanh Để cài_đặt tool bạn có_thể Clone github về hoặc sử_dụng pip pip install pyqt lxml Install qt and lxml by pip make qtpypython labelImgpypython labelImgpy [IMAGE PATH] [PRE-DEFINED CLASS FILE] Bài_viết của mình có_phần lủng_củng mong mọi_người đọc cho góp_ý để mình viết tốt_hơn của các bài về_sau ạ
Mình cảm_ơn ạ
! Tham_Khảo httpsrealpythoncomstoring-images-in-python httpsgithubcomabreheretPixelAnnotationTool httpsgithubcomBelvalTextRecognitionDataGenerator httpsgithubcomtzutalinlabelImg Computer Vision Machine Learning All Rights Reserved Report