httpsvibloasiapthuc-hanh-kubernetes-ks-bang-cach-su-dung-lenh-command-XLlADqJZekledangtuanbk ledangtuanbk Follow Published Sunday AM min read Thực_hành Kubernetes KS bằng cách sử_dụng lệnh Command Report Bài hướng_dẫn hôm_nay sẽ hướng_dẫn sử_dụng KS bằng cách sử_dụng câu lệnh thay_vì UI trên web
Có rất nhiều ưu_điểm tránh phụ_thuộc quá_nhiều vào giao_diện web
Có lựa_chọn để thực_hiện Sử_dụng Cloud Shell Active cloud shell theo hướng_dẫn này Trong cloud shell đã có sẵn gcloud và kubectl Kubernetes command-line tool Sử_dụng Command-line tools locally Install gcloud cho máy local của bạn tại_đây Sử_dụng gcloud cài kubectl gcloud components install kubectl Nếu trong quá_trình cài bị lỗi có_thể theo hướng_dẫn này Cài Docker ở máy local Cài Git Các bước chuẩn_bị đã xong bây_giờ vào phần chính
Cấu_hình các tham_số mặc định của google-cloud gcloud init theo hướng bạn chọn các thông_số phù_hợp Đăng nhập google account cho lần_đầu Chọn default project Chọn default zone chứa default region trong ví_dụ này mình chọn zone us-central-a nằm_trong us-central Sau_khi config xong banj cos thể xem lại thông_tin của mình gcloud config list sẽ có kết_quả như_sau là mình che thông_tin cá_nhân [compute]region us-centralzone us-central-a[core]account gmailcomdisable usage reporting Trueproject Tạo cluster trong ví_dụ này mình sẽ tạo autopilot cluster my-cluster là tên của cluster gcloud container clusters create-auto my-cluster --region us-central Chờ khoẳng p để hệ_thống tạo cluster
Connect cluster gcloud container clusters get-credentials my-cluster --region us-centralmessage Fetching cluster endpoint and auth datakubeconfig entry generated for my-cluster Tạo deployment từ sample image nginxlatest lấy từ dockerhub kubectl create deployment hello-app --imagenginxlatestdeploymentappshello-app created Tạo HorizontalPodAutoscaler cho deployment giúp auto scale dự vào sử_dụng CPU hệ_thống sẽ tự_động scale kubectl autoscale deployment hello-app --cpu-percent --min --max Có_thể kiểm_tra các Pods được tạo kubectl get pods Các pod được tạo_ra chạy trên mạng nội_bộ cần phải cho_phép bên_ngoài có_thể sử_dụng được các service này
Chúng_ta đi đến bước tạo service
Do nginx chạy port nên --target-port Mở liên kế từ bên_ngoài port --port Kiểu expose LoadBalancer khi ta có_nhiều pod các request sẽ được phân_chia vào các pod kubectl expose deployment hello-app --namehello-app-service --typeLoadBalancer --port --target-port Kiểm_tra các service đã được tạo kubectl get service output NAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEhello-app-service LoadBalancer TCP skubernetes ClusterIP TCP m Ban_đầu external-ip là chờ chút check lại hệ_thống sẽ khởi_tạo và gán external ip cho service khi đó việc tạo service sẽ thực_hiện được
NAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEhello-app-service LoadBalancer TCP mkubernetes ClusterIP TCP m Trong trường_hợp của mình mình đã có_thể truy_cập vào web http Khi muốn update version mới của image new image kubectl set image deploymenthello-app nginxnginx Khi_không sử_dụng có_thể delete service và cluster kubectl delete service hello-app-servicegcloud container clusters delete hello-cluster --region us-central command console Kubernetes Docker All Rights Reserved Report