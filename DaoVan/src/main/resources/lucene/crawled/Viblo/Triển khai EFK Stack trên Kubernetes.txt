Trần Đức ductnn Follow 7 1 1 Published about 16 hours ago 6 min read 25 0 0 Triển_khai EFK Stack trên Kubernetes Happy New Year Report EFK stack on K8S Giới_thiệu Một hệ_thống có_thể chạy nhiều dịch_vụ hoặc ứng_dụng khác_nhau vì_vậy việc theo_dõi hệ_thống là vô_cùng cần_thiết
Logging là một công_cụ đơn_giản nhưng lại rất tiện_lợi giúp ghi_lại toàn_bộ hoạt_động của hệ_thống
Nhờ_có logging ta có_thể tra_cứu lại trạng_thái của hệ_thống trong quá_khứ và có_thể tìm và fix lại lỗi dễ_dàng hơn
Hiện_nay đã có khá nhiều công_cụ để quản_lý log khác_nhau
Trong bài_viết này mình sẽ đề_cập đến bộ công_cụ EFKElasticsearch-Fluentbit-Kibana
EFK có rất nhiều ưu_điểm như phần_mềm mã nguồn mở hoàn_toàn miễn_phí 😁😁😁 và rất dễ xài_nữa
Bây_giờ mình sẽ giới_thiệu cho anh_em bộ công_cụ này và mình dùng để demo theo_dõi log của cụm kubernetes
OK


Vào thôi
EFK stack là tập_hợp của 3 phần_mềm đi chung với_nhau bao_gồm Elasticsearch Cơ_sở dữ_liệu NoSQL dùng để lưu_trữ dữ_liệu và cung_cấp interface để tìm_kiếm và query log
Fluent-bit Là phần_mềm mã nguồn mở viết bằng C được thiết_kế nhằm chú_trọng đến hiệu_suất
Nó cho_phép bạn thu_thập logs từ nhiều nguồn khác_nhau
Fluent bit được phát_triển bởi Fluentd team với mục_đích tạo_ra một phiên_bản lightweight trong việc xử_lý logs
Sau_đó fluent bit được sử_dụng như một giải_pháp xử_lý dành cho Cloud
Kibana Giao_diện để quản_lý thống_kê logs
Có nhiệm_vụ đọc thông_tin từ elasticsearch
Cơ_chế hoạt_động của bộ công_cụ được mô_tả qua hình dưới đây Đầu_tiên log sẽ được đưa_đến Fluent-bit
Fluent-bit sẽ đọc những log này thêm những thông_tin như thời_gian IP parse dữ liệu từ log server nào_độ nghiêm_trọng nội_dung log và ghi xuống Elasticsearch
Để xem log chúng_ta truy_cập URL của Kibana
Kibana sẽ đọc thông_tin log trong Elasticsearch hiển_thị lên giao_diện cho người_dùng query và xử_lý
Bây_giờ mình sẽ đề mô EFK stack cho Kubernetes Demo Ở bài_viết này mình sử_dụng minikube để deploy cụm kubernetes vì_vậy anh_em nào chưa cài minikube thì cài nha 😁😁😁
Để cài thì anh_em cứ vô trang_chủ xem thôi cũng đơn_giản thôi
Anh_em sẽ phải cài hai thứ là minikube và set_up kubectl cho minikube mình để link cài ở_đây cho ai lười tìm v
Mình sẽ demo theo thứ_tự sau Elasticsearch - Kibana - Fluent bit
Source code mình sẽ để ở_đây cho anh em tiện theo_dõi
Bước 1 Start cụm minikube [email protected]~demo-EFK minikube start😄 minikube v1
17
1 on Ubuntu 18
04🎉 minikube 1
18
1 is available
Download it httpsgithub
comkubernetesminikubereleasestagv1
18
1💡 To disable this notice run 'minikube config set WantUpdateNotification false'✨ Automatically selected the docker driver👍 Starting control plane node minikube in cluster minikube🔥 Creating docker container CPUs=2 Memory=2200MB


🐳 Preparing Kubernetes v1
20
2 on Docker 20
10
2


▪ Generating certificates and keys


▪ Booting up control plane


▪ Configuring RBAC rules


🔎 Verifying Kubernetes components


🌟 Enabled addons storage-provisioner default-storageclass🏄 Done
kubectl is now configured to use minikube cluster and default namespace by default Bước 2 Tạo namespace chung_cho cụm kubernetes [email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainkube-logging
yamlnamespacekube-logging created Kiểm_tra [email protected]~demo-EFK kubectl get nsNAME STATUS AGEdefault Active 2m24skube-logging Active 15skube-node-lease Active 2m25skube-public Active 2m25skube-system Active 2m25s Ta thấy namespace kube-logging chung đã được tạo Bước 3 Deploy Elasticsearch
Ở bước này chung ta sẽ deploy 2 phần đầu_tiên là service và statefuleset của elasticsearch
Ở trong serivices mình sử_dụng type NodePort để dễ_dàng chọc vô kiểm_tra nhưng cách này chỉ phục_vụ demo cho dễ thôi chứ không an_toàn vì ai lại đi choc vô DB tùy_tiện nhỷ 😸💀👻
[email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainelastic-service
yamlserviceelasticsearch created[email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainelastic-statefulset
yamlstatefulset
appselasticsearch created Kiểm_tra [email protected]~demo-EFK kubectl get svc -n kube-loggingNAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEelasticsearch NodePort 10
101
126
180 920031544TCP 54s[email protected]~demo-EFK kubectl get pods -n kube-loggingNAME READY STATUS RESTARTS AGEelasticsearch-0 11 Running 0 84s Bước 4 Deploy Kibana mình cũng sẽ deploy giống thằng elasticsearch services vẫn sẽ để type NodePort để tiện demo
[email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainkibana
ymlservicekibana createddeployment
appskibana created Kiểm_tra [email protected]~demo-EFK kubectl get svc -n kube-loggingNAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEelasticsearch NodePort 10
101
126
180 920031544TCP 6m56skibana NodePort 10
103
245
24 560131122TCP 37s[email protected]~demo-EFK kubectl get pods -n kube-loggingNAME READY STATUS RESTARTS AGEelasticsearch-0 11 Running 0 7m16skibana-5d6849dc8c-kmf7l 11 Running 0 82s Sau_đây là phần quan_trọng nhất deploy bé Fluent-bit
Mình sẽ giải_thích kỹ qua các bước deploy
Đầu_tiên để thu_thập logs từ cụm kubernetes mình sẽ phải cấp cho fluent-bit một account và một số quyền như [get list watch] để có_thể quản_lý logs
[email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainfluent-bit-service-account
ymlserviceaccountfluent-bit created[email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainfluent-bit-role
ymlWarning rbac
authorization
k8s
iov1beta1 ClusterRole is deprecated in v1
17+ unavailable in v1
22+; use rbac
authorization
k8s
iov1 ClusterRoleclusterrole
rbac
authorization
k8s
iofluent-bit-read created OK


Sau_đó ta cần liên_kết ServiceAccount với ClusterRole vừa tạo ở trên [email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainfluent-bit-role-binding
ymlWarning rbac
authorization
k8s
iov1beta1 ClusterRoleBinding is deprecated in v1
17+ unavailable in v1
22+; use rbac
authorization
k8s
iov1 ClusterRoleBindingclusterrolebinding
rbac
authorization
k8s
iofluent-bit-read created Tiếp_theo mình tiến_hành deploy file ConfigMap của fluent-bit
Anh_em có_thể theo_dõi file ConfigMap của mình ở_đây
Ở đây mình sử_dụng 4 sections của fluent-bit [SERVICE] dùng để tạo file logs
[INPUT] cấu hình đầu vào của nơi lấy logs
Phần lấy logs mình lấy tại thư_mục varlogcontainers
log trong cụm minikube
Anh_em có_thể cấu hình file log mà mình muốn lấy Ví_dụ etcd kube-api



[OUTPUT] cấu hình đầu_ra file log là host và port của elasticsearch
[PARSER] cấu hình file logs dạng json và time


Anh_em có_thể tìm_hiểu thêm trên docs của fluent-bit nhá
Mình cấu hình sương sương vậy demo tiếp thôi 3 [email protected]~demo-EFK kubectl create -f httpsraw
githubusercontent
comductnndemo-EFKmainfluent-bit-configmap
ymlconfigmapfluent-bit-config created Cuối_cùng là deploy file DaemonSet của fluent-bit
Nhưng trước_đó anh_em quay_lại chỗ của elasticsearch để lấy_IP và cấu hình vào file DaemonSet của fluent-bit như_sau Lấy IP của elasticsearch [email protected]~demo-EFK kubectl get svc -n kube-loggingNAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEelasticsearch NodePort 10
101
126
180 920031544TCP 50m Cấu hình vào fluent-bit env- name FLUENT ELASTICSEARCH HOST value 10
101
126
180 OK


Xong_xuôi rôi deploy thôi 3 [email protected]~demo-EFK kubectl create -f fluent-bit-ds-minikube
ymldaemonset
appsfluent-bit created Kiểm_tra [email protected]~demo-EFK kubectl get pods -n kube-loggingNAME READY STATUS RESTARTS AGEelasticsearch-0 11 Running 0 53mfluent-bit-fv4pm 11 Running 0 31skibana-5d6849dc8c-kmf7l 11 Running 0 47m Done


Kiểm_tra thành_quả nào
Anh_em check ip của cụm minikube theo command minikube ip sau_đó check port của kibana qua command [email protected]~demo-EFK kubectl get svc -n kube-loggingNAME TYPE CLUSTER-IP EXTERNAL-IP PORTS AGEelasticsearch NodePort 10
101
126
180 920031544TCP 53mkibana NodePort 10
103
245
24 560131122TCP 47m Sau_đó mở trình_duyệt truy_cập địa_chỉ minikube ip31122 để xem kết_quả Vậy là mình là vừa demo xong EFK stack để theo_dõi logs của cụm kubernetes
Hy_vọng bài_viết này của mình sẽ giúp anh hiểu được phần_nào của cách hoạt_động và lợi_ích của EFK 🎉🎉🎉
Cảm_ơn anh_em đã đọc 😄😄😄
References Setting up Fluent-bit Kubernetes Logging All Rights Reserved Report