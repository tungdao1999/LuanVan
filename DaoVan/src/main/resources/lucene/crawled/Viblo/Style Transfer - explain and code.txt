httpsvibloasiapstyle-transfer-explain-and-code-DoALKMTrung Thành Nguyễn TrungThanhNguyen Follow K Published Saturday AM min read Style Transfer - explain and code Report Bạn nghĩ sao về một bức_ảnh chụp máy_ảnh Hà_Nội nhưng lại mang phong_cách tranh thiên_tài Picasso
Với sự_ra_đời của thuật_toán Style Transfer chuyện đó là hoàn_toàn có_thể
Thuật_toán
Dưới_đây là hình minh_họa cho thuật_toán
Chúng_ta có ảnh gồm input image Được khởi tạo random lúc_đầu là ảnh nhiễu bất kì sau quá_trình update tối_ưu thành kết_quả ta muốn output image content image chứa nội_dung mà ảnh output image sẽ chứa style image chứa style phong_cách mà output image sẽ chứa sau quá_trình update sẽ thành ảnh mong_muốn Ý_tưởng thuật_toán rất đơn_giản cả ảnh cùng đưa_vào pretrained-CNN để trích_xuất ra các feature map
Những Feature map này là những thông_tin đặc_trưng chứa_đựng thông_tin về nội_dung đường_nét màu_sắc của ảnh hay còn gọi_là content feature
Style của một họa_sĩ bức_tranh thực_tế chính là mối quan_hệ giữa các đường_nét màu_sắc trong_tranh
Như_vậy bằng một phép biến_đổi gram matrix ta có_thể tính ra được style feature dựa_trên content feature
Thuật_toán cụ_thể như_sau Gọi ảnh input image content image style image lần_lượt là A B C Đưa cả ảnh vào cùng pretrained CNN để trích_xuất ra các feature cho ảnh lần_lượt là A content B content C content
Các feature này chính là feature đặc_trưng về nội_dung content Để biến_đổi content feature sang style feature ta dùng thuật_toán gọi_là hàm GramMatrix A style GramMatrixA content C style GramMatrixC content Ta có ContentLoss MSEA content B content StyleLoss MSEA style C style
Với MSE là hàm MeanSquareError được dùng phổ_biến trong Machine learning
Tính CombineLoss wContentLoss + w StyleLoss Tính đạo_hàm input image theo CombineLoss
Update input image với thuật_toán gradient descent
Chú_ý thứ chúng_ta tối_ưu ở_đây là input image chứ không_phải các params của pretrained model
Quy_trình sẽ lặp đi lặp_lại nhằm tối_ưu giá_trị CombineLoss Ảnh input image dần được update sao_cho ContentLoss và StyleLoss giảm dần
Tức có nội_dung giống với content image phong_cách giống với style image
Dừng thuật_toán khi input image đủ tốt Style feature Mình sẽ nói kĩ hơn về Style feature
Như bạn đã biết content feature đã bao_hàm thông_tin về đường_nét nội_dung hình_ảnh của ảnh style feature chính là mối quan_hệ tương_quan giữa các thông_tin này với_nhau
Trong Đại_số ta có khái_niệm GramMatrix
GramMatrix chính là thứ chúng_ta cần
GramMatrixAA∗ATGramMatrixA A_AT GramMatrixAA∗AT Phép_nhân trong công_thức này là phép_nhân ma_trận dot product
Thuật_toán về_cơ_bản là thế bắt_tay vào code bạn sẽ dễ_hiểu hơn
Thực_hành code Chuẩn_bị Để tiện_cho việc code và train mình sẽ code trên Google Colab
Hãy download và đọc code ở link sau Drive My Drive Torch khá tiện khi tính gradient của biến và update biến đó theo các thuật_toán optimizer
Vì vậy mình quyết_định dùng Torch thay_vì tensorflow
Cũng bài này năm trước mình code bài này bằng Tensorflow thuần khá vất_vả nên mình quyết_định đổi sang torch Gõ code Chắc_hẳn đây là phần được mong_đợi nhất
Mình sẽ tiến_hành code
Trước_hết do cả project bao_gồm code và dataset được lưu trên drive ta cần mount drive vào môi_trường ảo của colab
Bước này có_thể bỏ_qua nếu bạn run trên máy local mount drive to notebook dataset is saved in mydrivefrom googlecolab import drivedrivemount'contentdrive'cd 'contentdriveMyDriveProject by meColabCode in AI BlogStyle transfer ' Import lib and init some variable import torchimport torchnn as nnimport torchnnfunctional as Ffrom torch import optimfrom PIL import Imagefrom torchvision import transforms as Tfrom torchvision import modelsfrom matplotlib import pyplot as pltimg size device torchdevice'cuda'img transforms TCompose[ TResizeimg size img size TToTensor] Một_vài hàm phụ_trợ def load imgimg fn global device global img transforms image Imageopenimg fn image img transformsimage to batch image imageunsqueezetodevice torchfloat return imagedef to imageimg tensor image img tensorcpuclone image imagesqueeze image TToPILImageimage return imagedef plot imgsimgs cols size title rows lenimgscols + fig pltfigurefigsizecolssize rowssize for i img in enumerateimgs image to imageimg if isinstanceimg torchTensor else img figadd subplotrows cols i+ pltimshowimage pltsuptitletitle pltshow Các function và module quan_trọng bao_gồm ContentLoss StyleLoss GramMatrix Normalization def compute gram matrixfeature map batchsize c w h feature mapsize feature feature mapviewbatchsizec wh gram matrix torchmmfeature featureT gram matrix gram matrixbatchsizecwh normalize return gram matrix ContentLoss perceptual loss is MSE between input feature and target featureclass ContentLossnnModule def   init  self target feature superContentLoss self  init   target feature is an constant not variable selftarget feature target featuredetach def forwardself input feature selfloss Fmse lossinput feature selftarget feature return input feature styleLoss is MSE between gram matrix of input feature and target featureclass StyleLossnnModule def init  self target feature superStyleLoss self  init gram matrix compute gram matrixtarget feature selftarget gram matrix gram matrixdetach def forwardself input feature input gram matrix compute gram matrixinput feature selfloss Fmse lossinput gram matrix selftarget gram matrix return input feature Additionally VGG networks are trained on images with each channel normalized by mean[ ] and std[ ] We will use them to normalize the image before sending it into the networkclass NormalizationnnModule def init  self superNormalization self  init selfmean torchtensor[ ]view- todevice selfstd torchtensor[ ]view- todevice def forwardself image tensor return image tensor - selfmean selfstd Load pretrained-CNN model build Style Transfer model def build ST model cnn model normalization content layer names style layer names content img style img Build a style transfer model with specify style and content cnn modeleval ST model nnSequentialnormalization all content loss [] all style loss [] i for layer in cnn modelchildren if isinstancelayer nnConvd i + name 'conv 'formati elif isinstancelayer nnReLU name 'relu 'formati layer nnReLUinplaceFalse elif isinstancelayer nnMaxPoold name 'pool 'formati elif isinstancelayer nnBatchNormd name 'bn 'formati ST modeladd modulenamename modulelayer if name in content layer names target feature ST modelcontent img c loss ContentLosstarget featuretarget feature ST modeladd modulef'content loss i' modulec loss all content lossappendc loss if name in style layer names target feature ST modelstyle img s loss StyleLosstarget featuretarget feature ST modeladd modulef'style loss i' modules loss all style lossappends loss return ST model all content loss all style loss load pretrain-model and build StyleTransfer modelcnn model modelsvggpretrainedTruefeaturestodeviceevalnormalization Normalizationcontent layers ['conv ']style layers ['conv ' 'conv ' 'conv ' 'conv ' 'conv ']ST model all content loss all style loss build ST model cnn model normalization content layers style layers content img style img Function chính chứa trương trình chính để transfer style từ một ảnh sang ảnh khác def run style transfer cnn model normalization content layers style layers content img style img num steps style weight content weight Run main program to transfer style from style img to content img ST model content losses style losses build ST model cnn model normalization content layers style layers content img style img input image content imgclone input imagerequires grad optimizer optimRMSprop[input image] for i in rangenum steps input imagedataclamp optimizerzero grad content score style score ST modelinput image for c loss in content losses content score + c lossloss for s loss in style losses style score + s lossloss total loss content scorecontent weight + style scorestyle weight total lossbackward optimizerstep if i+ printcontent loss content scoreitem style loss style scoreitem input imagedataclamp return input image Thay vì khởi tạo random ảnh input image mình quyết định gán ảnh content image cho input image
Như_thế input image sẽ dễ_dàng và học nhanh hơn không tốn thời_gian trong việc khôi_phục content
Cũng bởi_vậy trong_số của StyleLoss được chọn lớn hơn rất nhiều trọng số của ContentLoss style img load img'datasetstyle-jpg'content img load img'datasetcontent jpg' output img run style transfer cnn model normalization content layers style layers content img style img num steps style weight content weightplot imgs[content img style img output img] size Kết_luận Như bạn thấy thuật_toán StyleTransfer này thực_sự không khó ý_tưởng và cách làm rất đơn_giản
Trong đề_tài StyleTransfer người_ta còn áp_dụng cả_GAN
Trong thời_gian tới mình sẽ cố_gắng viết bài về StyleTransfer với GAN
Hiện_tại mình mới lập blog cá_nhân tại httpstrungthanhnguyengithubio
Bạn có_thể follow mình trên Viblo hoặc đón đọc_bài trực_tiếp từ Blog cá_nhân
Cảm_ơn bạn đã đọc Tham_khảo Bài_viết cách đây năm của chính mình httpsforummachinelearningcobancomtstyle-transfer-tutorial httpspytorchorgtutorialsadvancedneural style tutorialhtml httpswwwtensorfloworgtutorialsgenerativestyle transfer sharpComputerVision Deep Learning All Rights Reserved Report